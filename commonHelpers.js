import{a as b,S as v,i as p}from"./assets/vendor-6e0bf343.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function a(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(t){if(t.ep)return;t.ep=!0;const s=a(t);fetch(t.href,s)}})();async function m({query:r,page:e=1}){const a="https://pixabay.com/api/",t={key:"43229281-da9ce3bce46360bd3cf91ebb8",q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15},{data:s}=await b(a,{params:{...t,page:e}});return s}function h(r){return r.map(({webformatURL:e,largeImageURL:a,tags:i,likes:t,views:s,comments:n,downloads:L})=>`<li class="list-item">
      <a class="item-link" href="${a}">
      <img src="${e}" alt="${i}"></a>
      <div class="img-desc">
        <p class="prop">Likes <span class="value">${t}</span></p>
        <p class="prop">Views <span class="value">${s}</span></p>
        <p class="prop">Comments <span class="value">${n}</span></p>
        <p class="prop">Downloads <span class="value">${L}</span></p>
      </div>
      
      </li>`).join("")}const q=document.querySelector(".js-form"),l=document.querySelector(".preloader"),d=document.querySelector(".js-list"),f=document.querySelector(".btn-load-more");q.addEventListener("submit",w);f.addEventListener("click",S);const g=new v(".gallery a",{captionDelay:250});let o=1,c="",u;async function w(r){if(r.preventDefault(),o=1,d.innerHTML="",c=r.target.elements.query.value.trim().toLowerCase(),!c){p.warning({message:"Please input your request",position:"topRight"});return}l.classList.remove("is-hidden"),f.classList.add("is-hidden");try{const e=await m({query:c,page:o});if(y(e.totalHits),!e.hits.length){p.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",backgroundColor:"red",messageColor:"#fff"});return}d.innerHTML=h(e.hits),g.refresh()}catch(e){e.statusText}finally{l.classList.add("is-hidden")}r.target.reset()}async function S(r){o+=1,l.classList.remove("is-hidden");try{const e=await m({query:c,page:o});y(e.totalHits),d.insertAdjacentHTML("beforeend",h(e.hits)),P(),g.refresh()}catch(e){e.statusText}finally{l.classList.add("is-hidden")}}function P(){const r=d.querySelector(".list-item");if(!r)return;const{height:e}=r.getBoundingClientRect();window.scrollBy({top:e*2,behavior:"smooth"})}function y(r){u=Math.ceil(r/15),o<u&&f.classList.remove("is-hidden"),o===u&&p.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight",backgroundColor:"blue",messageColor:"#000"})}
//# sourceMappingURL=commonHelpers.js.map
